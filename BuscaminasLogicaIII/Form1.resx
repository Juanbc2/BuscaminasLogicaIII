<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Xy5X9AobvQAAAABJRU5ErkJggg==
</value>
  </data>
</root>